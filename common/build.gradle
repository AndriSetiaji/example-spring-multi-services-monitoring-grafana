plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.1'
	id 'io.spring.dependency-management' version '1.1.2'
	id 'maven-publish'
}

group = 'com.ans'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	runtimeOnly 'io.micrometer:micrometer-registry-otlp'
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
	implementation 'io.micrometer:micrometer-tracing-bridge-otel'

	implementation 'io.opentelemetry:opentelemetry-api:1.29.0'
	implementation 'io.opentelemetry:opentelemetry-context:1.29.0'
	implementation 'io.opentelemetry:opentelemetry-sdk:1.29.0'
	implementation 'io.opentelemetry:opentelemetry-sdk-trace:1.29.0'
	implementation 'io.opentelemetry:opentelemetry-sdk-metrics:1.29.0'

	implementation 'io.opentelemetry:opentelemetry-sdk-common:1.29.0'
	implementation 'io.opentelemetry:opentelemetry-sdk-extension-autoconfigure-spi:1.29.0'
	implementation 'io.opentelemetry:opentelemetry-extension-trace-propagators:1.29.0'
	implementation 'io.opentelemetry:opentelemetry-exporter-common:1.29.0'
	implementation 'io.opentelemetry:opentelemetry-exporter-otlp:1.29.0'

	implementation 'io.opentelemetry:opentelemetry-exporter-otlp-common:1.29.0'
	implementation 'io.opentelemetry.instrumentation:opentelemetry-instrumentation-api-semconv:1.29.0-alpha'

	implementation 'io.opentelemetry.instrumentation:opentelemetry-logback-appender-1.0:1.29.0-alpha'
	implementation 'org.aspectj:aspectjweaver:1.9.20'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'io.opentelemetry:opentelemetry-extension-annotations'
	implementation 'javax.servlet:javax.servlet-api:4.0.1'

	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:4.1.0'

	// Spring Data JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// PostgreSQL Driver
	runtimeOnly 'org.postgresql:postgresql:42.6.0'

	// vault
	implementation 'org.springframework.vault:spring-vault-core:3.1.2'

	// rest template
	implementation 'org.springframework.boot:spring-boot-starter-web'

}

tasks.named('test') {
	useJUnitPlatform()
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java // Publikasikan artefak utama Java

			// Tambahkan informasi metadata Maven
			groupId = 'org.ans.test'
			artifactId = 'common'
			version = '1.4.4-dev'
		}
	}
//	repositories {
//		maven {./
//			// Lokasi repository (misalnya, untuk publikasi lokal)
//			url = uri("/home/ans/Documents/code/repo")
//		}
//	}
	repositories {
		maven {
			name = "nexusLocal"
			url = uri("http://localhost:18081/repository/maven-releases/") // Replace with "maven-snapshots" for snapshot builds
			allowInsecureProtocol = true
			credentials {
				username = "admin" // Default admin user
				password = "admin" // Replace with your password
			}
		}
	}
}